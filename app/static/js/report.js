/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!***********************!*\
  !*** ./src/report.ts ***!
  \***********************/
document.addEventListener('DOMContentLoaded', function () {
    var filterMake = document.querySelector('#filter-make');
    var filterType = document.querySelector('#type_of_vehicle');
    var filterModel = document.querySelector('#filter-model');
    var applyFiltersButton = document.querySelector('#apply-filters-button');
    filterMake.addEventListener('change', function () {
        var models = ['All'];
        fetch('/report/get_models', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ makeSelected: filterMake.value }),
        })
            .then(function (response) { return response.json(); })
            .then(function (data) {
            models.push.apply(models, data.models);
            console.log('Response from Flask server:', models);
            filterModel.innerHTML = '';
            models.forEach(function (option) {
                var optionElement = document.createElement('option');
                optionElement.value = option;
                optionElement.textContent = option;
                filterModel.appendChild(optionElement);
            });
            applyFiltersButton.click();
        })
            .catch(function (error) {
            console.error('Error sending data to Flask:', error);
        });
    });
    filterModel.addEventListener('change', function () {
        applyFiltersButton.click();
    });
    filterType.addEventListener('change', function () {
        applyFiltersButton.click();
    });
    var viewsButton = document.querySelector('#views-button');
    var viewsArrowDown = document.querySelector('#views-arrow-down');
    var viewsArrowUp = document.querySelector('#views-arrow-up');
    var viewsSelectNA = document.querySelector('#views-na');
    var viewsSelectAsc = document.querySelector('#views-asc');
    var viewsSelectDesc = document.querySelector('#views-desc');
    viewsButton.addEventListener('click', function () {
        viewsArrowDown.classList.toggle('hidden');
        viewsArrowUp.classList.toggle('hidden');
        if (viewsSelectNA.hasAttribute('selected')) {
            console.log('NA');
            viewsSelectNA.removeAttribute('selected');
            viewsSelectDesc.setAttribute('selected', 'selected');
        }
        else if (viewsSelectAsc.hasAttribute('selected')) {
            console.log('Asc');
            viewsSelectAsc.removeAttribute('selected');
            viewsSelectDesc.setAttribute('selected', 'selected');
        }
        else if (viewsSelectDesc.hasAttribute('selected')) {
            console.log('Desc');
            viewsSelectDesc.removeAttribute('selected');
            viewsSelectAsc.setAttribute('selected', 'selected');
        }
        applyFiltersButton.click();
    });
    // prettier-ignore
    var viewsColumnButton = document.querySelector('#views-column-button');
    // prettier-ignore
    var viewsColumnSelectNA = document.querySelector('#views-na');
    // prettier-ignore
    var viewsColumnSelectAsc = document.querySelector('#views-asc');
    // prettier-ignore
    var viewsColumnSelectDesc = document.querySelector('#views-desc');
    viewsColumnButton.addEventListener('click', function () {
        if (viewsColumnSelectNA.hasAttribute('selected')) {
            console.log('Column NA');
            viewsColumnSelectNA.removeAttribute('selected');
            viewsColumnSelectDesc.setAttribute('selected', 'selected');
        }
        else if (viewsColumnSelectAsc.hasAttribute('selected')) {
            console.log('Column Asc');
            viewsColumnSelectAsc.removeAttribute('selected');
            viewsColumnSelectDesc.setAttribute('selected', 'selected');
        }
        else if (viewsColumnSelectDesc.hasAttribute('selected')) {
            console.log('Column Desc');
            viewsColumnSelectDesc.removeAttribute('selected');
            viewsColumnSelectAsc.setAttribute('selected', 'selected');
        }
        applyFiltersButton.click();
    });
    var priceButton = document.querySelector('#price-button');
    var priceInputs = document.querySelector('#price-inputs');
    priceButton.addEventListener('click', function () {
        priceInputs.classList.toggle('hidden');
    });
    var dateReceivedButton = document.querySelector('#date_received');
    console.log(dateReceivedButton);
    dateReceivedButton.addEventListener('input', function () {
        console.log(dateReceivedButton.value);
        applyFiltersButton.click();
    });
});

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,