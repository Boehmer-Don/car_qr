"""add new users role

Revision ID: 548e4eb2e262
Revises: 6820846ae95a
Create Date: 2024-07-02 13:09:05.041362

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "548e4eb2e262"
down_revision = "6820846ae95a"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.add_column(sa.Column("_seller_id", sa.Integer(), nullable=True))
        batch_op.create_foreign_key(
            batch_op.f("fk_users__seller_id_users"), "users", ["_seller_id"], ["id"]
        )

    with op.get_context().autocommit_block():
        op.execute("ALTER TYPE usersrole ADD VALUE 'seller'")
        op.execute("ALTER TYPE usersrole ADD VALUE 'buyer'")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_users__seller_id_users"), type_="foreignkey"
        )
        batch_op.drop_column("_seller_id")

    op.execute("ALTER TYPE usersrole RENAME TO usersrole_old")
    op.execute("CREATE TYPE usersrole AS ENUM('admin', 'dealer')")
    op.execute(
        (
            "ALTER TABLE transactions ALTER COLUMN usersrole TYPE usersrole USING "
            "usersrole::text::usersrole"
        )
    )
    op.execute("DROP TYPE usersrole_old")

    # ### end Alembic commands ###
