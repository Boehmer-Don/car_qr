"""v 0.3

Revision ID: 459b653fbd86
Revises:
Create Date: 2023-11-20 09:23:23.060501

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "459b653fbd86"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "car_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_car_types")),
    )
    op.create_table(
        "clients",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("unique_id", sa.String(length=36), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("first_name", sa.String(length=64), nullable=False),
        sa.Column("last_name", sa.String(length=64), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("phone", sa.String(length=64), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_clients")),
    )
    with op.batch_alter_table("clients", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_clients_email"), ["email"], unique=True)

    op.create_table(
        "makes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_makes")),
    )
    op.create_table(
        "stripe_product_prices",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("stripe_price_id", sa.String(length=64), nullable=False),
        sa.Column("currency", sa.String(length=64), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("unit_amount", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_stripe_product_prices")),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("role", sa.Enum("admin", "dealer", name="usersrole"), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("password_hash", sa.String(length=255), nullable=False),
        sa.Column("activated", sa.Boolean(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("unique_id", sa.String(length=36), nullable=False),
        sa.Column("reset_password_uid", sa.String(length=64), nullable=False),
        sa.Column("first_name", sa.String(length=64), nullable=False),
        sa.Column("last_name", sa.String(length=64), nullable=False),
        sa.Column("name_of_dealership", sa.String(length=64), nullable=False),
        sa.Column("address_of_dealership", sa.String(length=64), nullable=False),
        sa.Column("country", sa.String(length=64), nullable=False),
        sa.Column("province", sa.String(length=64), nullable=False),
        sa.Column("city", sa.String(length=64), nullable=False),
        sa.Column("postal_code", sa.String(length=64), nullable=False),
        sa.Column("phone", sa.String(length=64), nullable=False),
        sa.Column(
            "plan", sa.Enum("basic", "advanced", name="usersplan"), nullable=False
        ),
        sa.Column("stripe_customer_id", sa.String(length=128), nullable=True),
        sa.Column("extra_emails", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("email", name=op.f("uq_users_email")),
        sa.UniqueConstraint(
            "stripe_customer_id", name=op.f("uq_users_stripe_customer_id")
        ),
    )
    op.create_table(
        "labels",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("unique_id", sa.String(length=36), nullable=False),
        sa.Column("sticker_id", sa.String(length=16), nullable=True),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("make", sa.String(length=64), nullable=False),
        sa.Column("vehicle_model", sa.String(length=64), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("mileage", sa.Float(), nullable=False),
        sa.Column("color", sa.String(length=64), nullable=False),
        sa.Column("trim", sa.String(length=64), nullable=False),
        sa.Column("type_of_vehicle", sa.String(length=64), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("price_sold", sa.Float(), nullable=True),
        sa.Column(
            "date_received",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("date_activated", sa.DateTime(), nullable=True),
        sa.Column("date_deactivated", sa.DateTime(), nullable=True),
        sa.Column("url", sa.String(length=255), nullable=False),
        sa.Column(
            "status",
            sa.Enum("cart", "active", "archived", name="labelstatus"),
            nullable=False,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("views", sa.Integer(), server_default="0", nullable=False),
        sa.Column("gift", sa.String(length=128), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_labels_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_labels")),
    )
    op.create_table(
        "models",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("make_id", sa.Integer(), nullable=True),
        sa.Column("type_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["make_id"], ["makes.id"], name=op.f("fk_models_make_id_makes")
        ),
        sa.ForeignKeyConstraint(
            ["type_id"], ["car_types.id"], name=op.f("fk_models_type_id_car_types")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_models")),
    )
    op.create_table(
        "stickers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(length=8), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("pending", sa.Boolean(), nullable=False),
        sa.Column("downloaded", sa.Boolean(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_stickers_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_stickers")),
    )
    op.create_table(
        "stripe_products",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("stripe_product_id", sa.String(length=64), nullable=False),
        sa.Column("price_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("description", sa.String(length=64), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["price_id"],
            ["stripe_product_prices.id"],
            name=op.f("fk_stripe_products_price_id_stripe_product_prices"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_stripe_products")),
    )
    op.create_table(
        "user_logo",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("filename", sa.String(length=256), nullable=False),
        sa.Column("mimetype", sa.String(length=32), nullable=False),
        sa.Column("file", sa.LargeBinary(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_user_logo_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_logo")),
    )
    op.create_table(
        "subscriptions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("stripe_subscription_id", sa.String(length=64), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("product_id", sa.Integer(), nullable=True),
        sa.Column("current_period_start", sa.Integer(), nullable=False),
        sa.Column("current_period_end", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["stripe_products.id"],
            name=op.f("fk_subscriptions_product_id_stripe_products"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_subscriptions_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_subscriptions")),
    )
    op.create_table(
        "trims",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=True),
        sa.Column("model_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["model_id"], ["models.id"], name=op.f("fk_trims_model_id_models")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_trims")),
    )
    with op.batch_alter_table("trims", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_trims_name"), ["name"], unique=False)

    with op.batch_alter_table("apscheduler_jobs", schema=None) as batch_op:
        batch_op.drop_index("ix_apscheduler_jobs_next_run_time")

    op.drop_table("apscheduler_jobs")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "apscheduler_jobs",
        sa.Column("id", sa.VARCHAR(length=191), autoincrement=False, nullable=False),
        sa.Column(
            "next_run_time",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("job_state", postgresql.BYTEA(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="apscheduler_jobs_pkey"),
    )
    with op.batch_alter_table("apscheduler_jobs", schema=None) as batch_op:
        batch_op.create_index(
            "ix_apscheduler_jobs_next_run_time", ["next_run_time"], unique=False
        )

    with op.batch_alter_table("trims", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_trims_name"))

    op.drop_table("trims")
    op.drop_table("subscriptions")
    op.drop_table("user_logo")
    op.drop_table("stripe_products")
    op.drop_table("stickers")
    op.drop_table("models")
    op.drop_table("labels")
    op.drop_table("users")
    op.drop_table("stripe_product_prices")
    op.drop_table("makes")
    with op.batch_alter_table("clients", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_clients_email"))

    op.drop_table("clients")
    op.drop_table("car_types")
    # ### end Alembic commands ###
