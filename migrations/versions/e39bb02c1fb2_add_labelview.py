"""add LabelView

Revision ID: e39bb02c1fb2
Revises: 459b653fbd86
Create Date: 2023-12-13 11:10:08.538299

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "e39bb02c1fb2"
down_revision = "459b653fbd86"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "label_views",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("unique_id", sa.String(length=36), nullable=False),
        sa.Column("label_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["label_id"], ["labels.id"], name=op.f("fk_label_views_label_id_labels")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_label_views")),
    )
    with op.batch_alter_table("apscheduler_jobs", schema=None) as batch_op:
        batch_op.drop_index("ix_apscheduler_jobs_next_run_time")

    op.drop_table("apscheduler_jobs")
    with op.batch_alter_table("labels", schema=None) as batch_op:
        batch_op.drop_column("views")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("labels", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "views",
                sa.INTEGER(),
                server_default=sa.text("0"),
                autoincrement=False,
                nullable=False,
            )
        )

    op.create_table(
        "apscheduler_jobs",
        sa.Column("id", sa.VARCHAR(length=191), autoincrement=False, nullable=False),
        sa.Column(
            "next_run_time",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("job_state", postgresql.BYTEA(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="apscheduler_jobs_pkey"),
    )
    with op.batch_alter_table("apscheduler_jobs", schema=None) as batch_op:
        batch_op.create_index(
            "ix_apscheduler_jobs_next_run_time", ["next_run_time"], unique=False
        )

    op.drop_table("label_views")
    # ### end Alembic commands ###
