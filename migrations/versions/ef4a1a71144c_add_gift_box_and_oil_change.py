"""add Gift box and oil change

Revision ID: ef4a1a71144c
Revises: db88511601df
Create Date: 2024-07-09 16:06:47.613463

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ef4a1a71144c"
down_revision = "db88511601df"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "gift_boxes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sale_result_id", sa.Integer(), nullable=False),
        sa.Column("gift_item_id", sa.Integer(), nullable=False),
        sa.Column("unique_id", sa.String(length=36), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("description", sa.String(length=264), nullable=False),
        sa.Column("total_price", sa.Float(), nullable=False),
        sa.Column("qty", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["gift_item_id"],
            ["gift_items.id"],
            name=op.f("fk_gift_boxes_gift_item_id_gift_items"),
        ),
        sa.ForeignKeyConstraint(
            ["sale_result_id"],
            ["sale_reports.id"],
            name=op.f("fk_gift_boxes_sale_result_id_sale_reports"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_gift_boxes")),
    )
    op.create_table(
        "oil_changes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("unique_id", sa.String(length=36), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("sale_rep_id", sa.Integer(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("is_done", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["sale_rep_id"],
            ["sale_reports.id"],
            name=op.f("fk_oil_changes_sale_rep_id_sale_reports"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_oil_changes")),
    )

    with op.batch_alter_table("gift_items", schema=None) as batch_op:
        batch_op.alter_column(
            "description",
            existing_type=sa.VARCHAR(length=64),
            type_=sa.String(length=264),
            existing_nullable=False,
        )

    with op.batch_alter_table("labels", schema=None) as batch_op:
        batch_op.alter_column(
            "url",
            existing_type=sa.VARCHAR(length=64),
            type_=sa.String(length=255),
            existing_nullable=False,
        )

    with op.batch_alter_table("sale_reports", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "is_notfy_by_email", sa.Boolean(), nullable=False, server_default="0"
            )
        )
        batch_op.add_column(
            sa.Column(
                "is_notfy_by_phone", sa.Boolean(), nullable=False, server_default="0"
            )
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("sale_reports", schema=None) as batch_op:
        batch_op.drop_column("is_notfy_by_phone")
        batch_op.drop_column("is_notfy_by_email")

    with op.batch_alter_table("labels", schema=None) as batch_op:
        batch_op.alter_column(
            "url",
            existing_type=sa.String(length=255),
            type_=sa.VARCHAR(length=64),
            existing_nullable=False,
        )

    with op.batch_alter_table("gift_items", schema=None) as batch_op:
        batch_op.alter_column(
            "description",
            existing_type=sa.String(length=264),
            type_=sa.VARCHAR(length=64),
            existing_nullable=False,
        )

    op.drop_table("oil_changes")
    op.drop_table("gift_boxes")
    # ### end Alembic commands ###
